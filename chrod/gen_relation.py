
# imports needed for the following examples
import pandas as pd
import numpy as np
# import matplotlib.pyplot as plt
import scipy.spatial.distance as distance

# read a local file (path is relative to python's working directory)
# sep, header=True/None
infile = '../data/PO_asof_20150525.txt'
df = pd.read_table(infile, sep="|", thousands=',')

# set column name
df.columns = ['comp_code', 'comp_name', 'vendor_code', 'vendor_name',
              'which_day', 'po', 'amt']

grouped = df.groupby(['comp_code', 'vendor_code']).agg({'amt': np.sum,
                                                        'po': 'count'})

grouped['vendor_cnt'] = 1

# clear all index generated by groupby
slim = grouped.reset_index()
slim['amt_log'] = np.log2(slim['amt'])

comp_vendor = slim.pivot(index='comp_code', columns='vendor_code',
                         values='amt_log')
comp_vendor = comp_vendor.fillna(0)

# rtn = distance.pdist(comp_vendor, 'correlation')
rtn = distance.pdist(comp_vendor, 'euclidean')
rtn_square = distance.squareform(rtn)

rtn_df = pd.DataFrame(rtn_square)

# replace inf: distance and relation is opposit.
# using mask for INF
max_distance = round(max(np.ma.masked_invalid(rtn)))

rtn_df2 = rtn_df.replace([np.inf, -np.inf], max_distance)
rtn_df2 = max_distance - rtn_df2

# output file: no header, no index
rtn_df2.to_csv('distance.txt', index=False, header=False, float_format='%.2f')
