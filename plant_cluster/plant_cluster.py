# imports needed for the following examples
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.spatial.distance as distance
import scipy.cluster.hierarchy as hierarchy

# read a local file (path is relative to python's working directory)
# sep, header=True/None
infile = '../data/PO_asof_20150525.txt'
df = pd.read_table(infile, sep="|", thousands=',')

# set column name
df.columns = ['comp_code', 'comp_name', 'vendor_code', 'vendor_name',
              'which_day', 'po', 'amt']

grouped = df.groupby(['comp_code', 'vendor_code']).agg(
    {'amt': np.sum, 'po': 'count'})

# add two new columns
grouped['vendor_cnt'] = 1
grouped['amt_log'] = np.log2(grouped['amt'])

# clear all index generated by groupby
# prepare for pivot
slim = grouped.reset_index()

# simple version, only (vendor count, log(po count), log(amt)) for clustering
comp_vendor = slim.groupby('comp_code').agg(
    {'amt': np.sum, 'po': np.sum, 'vendor_cnt': 'count'})
comp_vendor['amt_log'] = np.log(comp_vendor['amt'])
comp_vendor['po_log'] = np.log(comp_vendor['po'])
comp_vendor = comp_vendor.drop(['po', 'amt'], 1)

# comp_vendor = slim.pivot(index='comp_code',
#                          columns='vendor_code', values='amt_log')

comp_vendor = comp_vendor.fillna(0)

# only use top 20 for clustering
comp_vendor = comp_vendor.sort('amt_log', ascending=False)
comp_vendor = comp_vendor.head(20)

n = comp_vendor.shape[0]
k = 5

d = distance.pdist(comp_vendor)
Z = hierarchy.linkage(d, method='single')
T = hierarchy.fcluster(Z, k, 'maxclust')

# calculate labels
labels = list('' for i in range(n))
for i in range(n):
    labels[i] = str(comp_vendor.index[i])
    # labels[i] = str(T[i]) + '-' + str(comp_vendor.index[i])

# log2 to change the distance for better plot
# for line in Z:
#     line[2] = np.log(line[2])

# calculate color threshold
ct = Z[-(k-1), 2]

# plot
P = hierarchy.dendrogram(Z, labels=labels, color_threshold=ct)

plt.show()
